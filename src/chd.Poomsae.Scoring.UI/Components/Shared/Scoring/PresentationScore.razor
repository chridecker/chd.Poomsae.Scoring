@using System.Reflection
@using System.Globalization
@using chd.Poomsae.Scoring.UI.Extensions
<div class="presentation-score">
    <div class="presentation-score-label">@this.Text</div>
    <div class="presentation-score-slider">
        <input type="range" min="0" max="@this.Max" step="0.1" value="@this._propertyValue.ToDisplayString()" @oninput="this.OnInput" />
    </div>
    <div class="presentation-score-value"><div class="score-value">@this._propertyValue.ToDisplayString()</div></div>
</div>

@code {

    [Parameter] public ScoreDto Dto { get; set; }
    [Parameter] public string Text { get; set; }
    [Parameter] public decimal Max { get; set; }
    [Parameter] public string Property { get; set; }

    PropertyInfo _propertyInfo => typeof(ScoreDto).GetProperty(this.Property);

    private decimal _propertyValue
    {
        get
        {
            if (this._propertyInfo is null) { return 0; }

            var val = this._propertyInfo.GetValue(this.Dto);
            if (Nullable.GetUnderlyingType(_propertyInfo.PropertyType) != null
            && Nullable.GetUnderlyingType(this._propertyInfo.PropertyType) == typeof(decimal))
            {
                return ((decimal?)val) ?? 0;
            }
            else if (val is decimal d)
            {
                return d;
            }
            return 0;
        }
    }

    private async Task OnInput(ChangeEventArgs e)
    {
        if (decimal.TryParse(e.Value.ToString(), CultureInfo.InvariantCulture, out var val))
        {
            this._propertyInfo.SetValue(this.Dto, val);
        }
    }
}