@using Blazored.Modal.Services
@using chd.Poomsae.Scoring.Contracts.Dtos
@using chd.Poomsae.Scoring.Contracts.Enums

<div class="scoring-presentation @_css">
    <div class="scoring">
        <PresentationScore Text="@TextConstants.SpeedAndPower" Max="2" ValueChanged="(d) => this._dto.SpeedAndPower = d" />
        <PresentationScore Text="@TextConstants.RhythmAndTempo" Max="2" ValueChanged="(d) => this._dto.RhythmAndTempo = d" />
        <PresentationScore Text="@TextConstants.ExpressionAndEnergy" Max="2" ValueChanged="(d) => this._dto.ExpressionAndEnergy = d" />
    </div>
    <div class="buttons">
        <button class="btn btn-primary" @onclick="async ()=> await this.ModalInstance.CloseAsync(ModalResult.Ok(this._dto))">Übernehmen</button>
        <button class="btn btn-cancel" @onclick="async ()=>await this.ModalInstance.CancelAsync()">Abbrechen</button>
    </div>
</div>



@code {
    private PresentatioScoreDto _dto = new();

    [CascadingParameter] public BlazoredModalInstance ModalInstance { get; set; }

    [Parameter] public EScoringButtonColor Color { get; set; }

    private string _css => this.Color is EScoringButtonColor.Red ? "score-hong" : "score-chong";
}