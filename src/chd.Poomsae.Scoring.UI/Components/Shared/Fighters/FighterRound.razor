@using chd.Poomsae.Scoring.UI.Extensions
<div class="fighter-round" @onclick="this.OpenRound">
    <div class="fighter-score total">@_totalValue.ToDisplayString("")</div>
    <div class="fighter-score presentation">@_presentationValue.ToDisplayString("")</div>
    <div class="fighter-score accuracy">@_accuracyValue.ToDisplayString("")</div>
</div>

@code {
    [Inject] IModalService modalService { get; set; }

    [Parameter] public RoundDto Round { get; set; }

    private async Task OpenRound()
    {
        var res = await this.modalService.Show<RoundModal>(this.Round.Fighter.DisplayName, new ModalParameters()
        {
            {nameof(RoundModal.Round),this.Round}
        }, new ModalOptions()
        {
            Position = ModalPosition.TopCenter,
            Size = ModalSize.ExtraLarge,
        }).Result;
        if (res.Confirmed)
        {
            await this.InvokeAsync(this.StateHasChanged);
        }
    }

    private decimal? _totalValue => this._presentationValue.HasValue && this._accuracyValue.HasValue ? this._presentationValue + this._accuracyValue : null;

    private decimal? _presentationValue
    {
        get
        {
            return this.Round.Scores.Any(a => a.Presentation.HasValue) ? this.Round.Scores.Select(s => s.Presentation ?? 0).Average() : null;
        }
    }

    private decimal? _accuracyValue
    {
        get
        {
            return this.Round.Scores.Any() ? this.Round.Scores.Select(s => s.Accuracy).Average() : null;
        }
    }
}