# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build MAUI Android App

on:
  workflow_dispatch:
    inputs: 
      build_config:
        description: 'How to build debug/release'
        required: true
        default: 'Release'
      use_aab:
        description: 'Create an AAB Artifact'
        required: true
        default: 'true'
      use_apk:
        description: 'Create an APK Artifact'
        required: true
        default: 'false'
      package_name:
        description: 'APP Package Name'
        required: true
        default: 'com.companyname.chd.poomsae.scoring.app'
      platform:
        description: 'APP Platform'
        required: true
        default: 'android'

jobs:
  build:
    env:
      BUILD_CONFIG: ${{ github.event.inputs.build_config }}
      
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
   
    - name: Install Maui
      run: dotnet workload install maui 
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Publish
      run: |
        $MAJOR=1
        $MINOR=1
        $YEAR=& Get-Date -UFormat "%y%j"
        $HOUR=& Get-Date -format HHmm
        $VERSION="$MAJOR.$MINOR.$YEAR.$HOUR"
        echo "DATEVERSION=$VERSION" >> $env:GITHUB_ENV
        dotnet publish src/chd.Poomsae.Scoring.App/chd.Poomsae.Scoring.App.csproj --no-restore --configuration ${{ env.BUILD_CONFIG }} --framework net9.0-android /p:ApplicationDisplayVersion=$VERSION /p:ApplicationVersion=${{ github.run_number}} /p:AndroidSigningKeyPass=${{secrets.CHDPOOMSAE_SCORING_KEYPASS}} /p:AndroidSigningStorePass=${{secrets.CHDPOOMSAE_SCORING_KEYPASS}} /p:AndroidKeyStore=true /p:AndroidSigningKeyStore=chdpoomsaescoring.keystore /p:AndroidSigningKeyAlias=chdpoomsaescoring /p:AndroidSigningKeyAlias=chdpoomsaescoring /p:AndroidVersionCode=${{github.run_number}} 
        
    - name: Upload APK Build Artifact
      if: ${{ github.event.inputs.use_apk == 'true' }}
      uses: actions/upload-artifact@v4.4.2
      with:
        name: chdPoomsaeScoring
        path: ./**/bin/Release/**/publish/*.apk
          
    - name: Upload AAB Build Artifact
      if: ${{ github.event.inputs.use_aab == 'true' }}
      uses: actions/upload-artifact@v4.4.2
      with:
        name: chdPoomsaeScoringAAB
        path: ./**/bin/Release/**/publish/*.app-Signed.aab

    - name: Set up SSH
      run: |
         mkdir -p ~/.ssh
         echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_ed25519
         chmod 600 ~/.ssh/id_ed25519
         ssh-keyscan github.com >> ~/.ssh/known_hosts
         
    - name: SSH-Key aus Secret speichern
      shell: pwsh
      run: |
        $sshPath = "$env:USERPROFILE\.ssh"
        if (-Not (Test-Path $sshPath)) {
          New-Item -ItemType Directory -Path $sshPath | Out-Null
        }
        $privateKey = '${{ secrets.SSH_KEY }}' -replace "`r`n", "`n"
        $privateKey | Out-File -FilePath "$sshPath\id_ed25519" -Encoding ascii
        icacls "$sshPath\id_ed25519" /inheritance:r /grant:r "${env:USERNAME}:(R,W)"
        # Known hosts hinzufÃ¼gen, damit SSH-Verbindung klappt
        ssh-keyscan github.com | Out-File -FilePath "$sshPath\known_hosts" -Encoding ascii
    - name: Commit Version Update
      run: |
        git clone git@github.com:chridecker/chd.version.git
        cd chd.version
        New-Item -ItemType Directory -Path "${{ github.event.inputs.package_name }}/${{ github.event.inputs.platform }}" -Force
        Remove-Item -Path "${{ github.event.inputs.package_name }}/${{ github.event.inputs.platform }}/Version.json" -ErrorAction SilentlyContinue
        @{Version="${{ env.DATEVERSION }}" } | ConvertTo-Json -Compress > ${{ github.event.inputs.package_name }}/${{ github.event.inputs.platform }}/Version.json
        git add ${{ github.event.inputs.package_name }}/${{ github.event.inputs.platform }}/Version.json
        git config user.name "CHD Build Service"
        git config user.email "chdscoring@gmail.com"
        git commit -a -m "Version $env:DATEVERSION  "
        git push -f     
